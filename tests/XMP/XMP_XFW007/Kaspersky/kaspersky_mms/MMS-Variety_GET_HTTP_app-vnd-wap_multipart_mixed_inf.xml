<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
This scenario will verify that the scanning, identifying and blocking is done 
as expected when the MMS is multipart mixed.

Test Description:
 1. Start web server and MMSC
 2. Send virus Infected data in HTTP Get Proxy Request
 3. Check Response Code
 4. Check body for notification text
 5. Check logscan for infection
 6. Stop web server and MMSC

Expected Result:
 -  XMP should Block this request and responed with notification MMS which its text is taken from the component-view file.

XTT Commands:
        startWebServer
 1.   - startMMSCServer
 2.   - sendGetRequest 		"HTTP"
 3.   - checkResponseCode	"HTTP" "200"
 4.   - queryBody "HTTP" 
 5.   - queryResponse "Remote"
 6.   - stopMMSCServer
        stopWebServer
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <!-- Test Start  -->

<test>
	<function name="testName" module="Basic">
		<parameter>MMS-Variety_GET_HTTP_app-vnd-wap_multipart_mixed_inf</parameter>
	</function>

	<description>MMS Variety application/vnd.wap.multipart.mixed infected</description>

<subtest>virus_scan_reqmod.xml</subtest>

	<!-- Start Web Server -->
	<function name="startWebServer" module="HTTP" />
	<function name="startMMSCServer" module="MMSC" >
	</function>

        <!-- Radius Login -->
        <function name="radiusLogon" module="Radius">
                <parameter>xttuser</parameter>
            <parameter>12346</parameter>
	</function>
     
    <function name="setServerHeader" module="HTTP">
        <parameter>content-type</parameter>
        <parameter>application/vnd.wap.mms-message</parameter>
    </function>

	<!-- Send virus Infected data in HTTP Get Proxy Request -->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>SYSTEM/IP</configuration>
<!--			<parameter>/mms/application-vnd-wap-multipart-mixed_infected.mms</parameter-->
			<parameter>/mms/multipart-mixed_infected.mms</parameter>
		</parameter>
	</function>

	<!-- Validate Response Code Send by XMP -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<function name="queryBody" module="HTTP">
		<parameter>dev/null</parameter>
		<parameter>Message content blocked because it was infected by a virus</parameter>
	</function>

 	<function name="sleep" module="Basic">
		<parameter>2000</parameter>
	</function>

 <!--  save the latest logscan into temp log file  -->
    <function name="getNewestRemoteFileName" module="Remote">
        <parameter>newestlogfile</parameter>
	    <configuration>remote/logpath</configuration>
        <parameter>XMP</parameter>
    </function>
    <function name="executeRemoteXMSCommand" module="Remote">
    	<parameter>
            <configuration>remote/command</configuration>
    	    <parameter>logscan -in </parameter>
    	    <variable>newestlogfile</variable>
            <parameter> -out </parameter>
    	      <parameter>x.log</parameter>
    	</parameter>
    </function>

  <!-- verify ICC_Rsp_COMPRESSION_TypeOut param is exist -->
    <function name="executeRemoteCommand" module="Remote">
        <parameter>/bin/grep KAV8_RspResult x.log | tail -1</parameter>
    </function>

  <!-- check the value of ICC_Rsp_COMPRESSION_TypeOut param -->
	<function name="queryResponse" module="Remote">
		<parameter>KAV8_RspResult: INFECTED</parameter>
		<parameter>data</parameter>
	</function>

    <function name="writeRemoteFile" module="Remote">
        <parameter>reqmodTCemptyrules.xml</parameter>
        <parameter>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;requestModifications&gt;&lt;/requestModifications&gt;</parameter>
    </function>
    <function name="executeRemoteXMSCommand" module="Remote">
        <parameter>
            <parameter>load data </parameter>
            <parameter>reqmodTCemptyrules.xml</parameter>
        </parameter>
    </function>
    <function name="queryResponse" module="Remote">
        <parameter>^Loaded requestmodifications.*</parameter>
        <parameter>dev/null</parameter>
    </function>

        <!-- Radius Logoff -->
         <function name="radiusLogoff" module="Radius">
            <parameter>xttuser</parameter>
            <parameter>12346</parameter>
	</function> 

	<!-- Stop Web Server -->
	<function name="stopMMSCServer" module="MMSC" />
	<function name="stopWebServer" module="HTTP"/>

</test>
