<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Description: 
This test case will verify success behavior of the Logging module.
This scenario will set <include> list with ICC_* and HTG_Bytes* and <exclude> list with ICC_Rsp_COMPRESSION and HTG_BytesIn.
The outcome will be that the exclude params will not shown in the logscan.
What will show are all ICC params exept ICC_Rsp_COMPRESSION and HTG_BytesOut.

Test steps:
1. Start session
2. Restart the LOGGER.* proc in order to get a clean log file.
3. Upload reqmod and logging data files.
4. Set client headers
5. Send GET request
6. Spill the logscan into z.log (temp file)
7. egrep -v HTA_ProtocolVersion and HTA_ReqHdr_content-length
8. verify that with or without them the log looks the same.
8. Verify the correct response (by queryResponse function)
9. Remove x.log (temp file)
10. Close session

Wrote by Oren Bodner at 13/02/2011

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<test>
	<name>xmpLogICC_ExIn_TC003</name>
	<description>ExcludeInclude list 003</description>

	<!-- start server and session -->
	<function name="startWebServer" module="HTTP"/>
	<function name="radiusLogon" module="Radius">
		<parameter>xttuser</parameter>
		<parameter>12346</parameter>
	</function>

	<!-- Prepare the Logging data File -->
	<function name="writeRemoteFile" module="Remote">
		<parameter>Logging_LogICC_TC001.xml</parameter>
		<xml>
			<logging>
		 	 <process namePattern="^HTTP-PROXY|^TCP-ROUTER|^WAP1-PROXY">
		 	   <includeElements>
		 	     <element name="ICC_*"/>
		 	     <element name="HTG_Bytes*"/>
		 	   </includeElements>
			    <excludeElements>
			      <element name="ICC_Rsp_COMPRESSION"/>
			      <element name="HTG_BytesIn"/>
			    </excludeElements>
			  </process>
			</logging>
		</xml>
    </function>

	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>load data </parameter>
			<parameter>Logging_LogICC_TC001.xml</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>^Loaded logging.*</parameter>
		<parameter>dev/null</parameter>
	</function>

	<!-- Prepare the Request Modification File -->
	<function name="writeRemoteFile" module="Remote">
		<parameter>REQMOD_LogICC_TC001.xml</parameter>
		<xml>
<requestModifications xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="requestmodifications.xsd">
<table name="authentication" phase="authentication" >
        <selector urlPattern="*://*/*" >
                <modifyContext name="FTR_AuthenticationType" value="'none'" />
                <modifyContext name="FTR_SubscriberId" value="TCP_RemoteIpAddress" />
        </selector>
</table>
<table name="DisableThings" phase="httpRequest">
	<selector>
		<modifyContext name="Skip_CACHE" value="'true'" />
		<modifyContext name="FTR_RemoveInterlacing" value="'true'" />
		<modifyContext name="Skip_VIRUSSCANNER" value="'true'" />
		<modifyContext name="FTR_HtmlTidyDisable" value="'true'" />
		<modifyContext name="Skip_COOKIE" value="'true'" />
		<modifyContext name="Skip_ICC" value="'false'" />
		<modifyContext name="FTR_MultipartCompose_Disable" value="'true'" />
		<modifyContext name="FTR_Prefetch_Disable" value="'true'" />
		<modifyContext name="FTR_Deflate_Disable" value="'false'" />
		<modifyContext name="FTR_Gzip_Disable" value="'false'" />
		<modifyContext name="TCP_HideSourceAddress" value="'false'"/>
	</selector>
</table>
</requestModifications>
		</xml>
    </function>

	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>load data </parameter>
			<parameter>REQMOD_LogICC_TC001.xml</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>^Loaded requestmodifications.*</parameter>
		<parameter>dev/null</parameter>
	</function>

	<function name="restartProcess" module="Remote">
		<parameter>LOGGER.*</parameter>
	</function>

	<!-- is not actually nececarry but set it to something that is not in a wurfl. -->
	<function name="setHeader" module="HTTP">
		<parameter>User-Agent</parameter>
		<parameter>XTT/gzip</parameter>
	</function>

	<!-- set the accept to the converted type so conversion has to take place -->
	<function name="setHeader" module="HTTP">
		<parameter>Accept</parameter>
		<parameter>text/plain</parameter>
	</function> 
	
	<!-- set the accept-encoding for the test -->
	<function name="setHeader" module="HTTP">
		<parameter>Accept-Encoding</parameter>
		<parameter>gzip</parameter>
	</function>

	<function name="sleep" module="Basic">
		<parameter>2000</parameter>
	</function>	

	<!-- download the file system independent -->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>system/ip</configuration>
			<parameter>/images/bz.txt</parameter>
		</parameter>
	</function>

	<!-- a http response code of 200 is expected -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>	
	
	<!-- check we didn't get a server message but the actuall content of the file -->
	<function name="queryText" module="Basic">
		<variable>HTTP/BODY/PLAIN</variable>
		<parameter>dev/null</parameter>
		<parameter>The change in this ticket</parameter>
	</function>	

	<function name="sleep" module="Basic">
		<parameter>7000</parameter>
	</function>	

  <!--  save the latest logscan into temp log file  -->
    <function name="getNewestRemoteFileName" module="Remote">
        <parameter>newestlogfile</parameter>
	    <configuration>remote/logpath</configuration>
        <parameter>XMP</parameter>
    </function>
    <function name="executeRemoteXMSCommand" module="Remote">
    	<parameter>
            <configuration>remote/command</configuration>
    	    <parameter>logscan -in </parameter>
    	    <variable>newestlogfile</variable>
    	    <parameter> -out z.log</parameter>
    	</parameter>
    </function>

<!--~~~~~~~   Few functions that simulate "egrep"   ~~~~~~~~~~~-->
  <!-- verify ICC_Rsp_COMPRESSION param is NOT exist -->
    <function name="executeRemoteCommand" module="Remote">
        <parameter>/bin/grep -v "ICC_Rsp_COMPRESSION:|HTG_BytesIn" z.log</parameter>
        <parameter>10000</parameter>
        <parameter>GREPING_DATA1</parameter>
    </function>

    <function name="executeRemoteCommand" module="Remote">
        <parameter>/bin/cat z.log</parameter>
        <parameter>10000</parameter>
        <parameter>CAT_FILE</parameter>
    </function>
    
 <!-- compare log file to grep without ICC_Rsp_COMPRESSION -->
	<function name="compareString" module="Basic">
		<variable>GREPING_DATA1</variable>
		<variable>CAT_FILE</variable>
	</function>
    
  <!-- verify HTA_ResponseStatus param is exist -->
    <function name="executeRemoteCommand" module="Remote">
        <parameter>/bin/grep ICC_Rsp_COMPRESSION_BytesIn z.log</parameter>
    </function>

	<function name="queryResponse" module="Remote">
		<parameter>ICC_Rsp_COMPRESSION_BytesIn</parameter>
		<parameter>data</parameter>
	</function>
  <!-- verify HTA_ResponseStatus param is exist -->
    <function name="executeRemoteCommand" module="Remote">
        <parameter>/bin/grep HTG_BytesOut z.log</parameter>
    </function>

	<function name="queryResponse" module="Remote">
		<parameter>HTG_BytesOut</parameter>
		<parameter>data</parameter>
	</function>
<!--~~~~~~~   End of "egrep" simulation   ~~~~~~~~~~~-->

  <!-- Removing the log files -->
    <function name="executeRemoteCommand" module="Remote">
        <parameter>
		<parameter>rm -f z.log </parameter>
		<configuration>remote/logpath</configuration>
    		<variable>newestlogfile</variable>
	</parameter>
    </function>

	<function name="removeVariables" module="Basic">
		<parameter>.*</parameter>
	</function>	

	<!-- cleanup so next test can be run with clean status -->
	<function name="radiusLogoff" module="Radius">
		<parameter>xttuser</parameter>
		<parameter>12346</parameter>
	</function>
	
	<function name="stopWebServer" module="HTTP"/>
</test>
