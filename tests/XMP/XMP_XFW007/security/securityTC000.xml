<test>
    <!-- 
    
    Information on security:
        
        The Certificate chain is as follows:
            xttCert.der - is the end certificate sent by the XTT webserver
            userCert1.der - was used to sign xttCert.der
            cacert.der - is a self signed certificate, which was used to sign userCert1.der
    
        xttCertcrlprep.rls is the crlprep generated file for revoking xttCert.der
        xttCert.crl was used to generate the above prep
        
        userCert1crlprep.rls is the crlprep to revoke userCert1.der
        userCert1.crl revokes userCert1.der
        
        emptycrlprep.rls is an empty prep, this is needed to remove the other crlpreps
        
    -->
    
    <function name="testName" module="Basic">
        <parameter>SECURITY.TC.000</parameter>
    </function>
    
    <function name="writeRemoteBinaryFile" module="Remote">
        <parameter>cacert.der</parameter>
        <base64file>cacert.der</base64file>
    </function>

    <function name="writeRemoteBinaryFile" module="Remote">
        <parameter>userCert1.der</parameter>
        <base64file>userCert1.der</base64file>
    </function>
    
    <function name="writeRemoteFile" module="Remote">
        <parameter>security.xml</parameter>
        <file>security.xml</file>
    </function>

    <function name="writeRemoteFile" module="Remote">
        <parameter>securityBlank.xml</parameter>
        <file>securityBlank.xml</file>
    </function>
    
    <!--function name="writeRemoteFile" module="Remote">
        <parameter>securityCRLOFF.xml</parameter>
        <file>securityCRLOFF.xml</file>
    </function-->
      
    
    <!--configuration>../config.xml</configuration-->

    <function name="executeRemoteXMSCommand" module="Remote">
        <parameter>
            <configuration>REMOTE/COMMAND</configuration>
            <parameter>pwcrypt -f </parameter>
            <configuration>productlicense</configuration>
            <parameter> demo1234</parameter>
        </parameter>
    </function>

    <function name="queryResponse" module="Remote">
        <parameter>.*</parameter>
        <parameter>PASSWORD</parameter>
    </function>


    <function name="writeRemoteFile" module="Remote">
        <parameter>securityCRLOFF.xml</parameter>
        <parameter>
        <parameter>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;security&gt;    
		&lt;devices&gt;
			&lt;wtls allowWeakEncryption="false" keyRefresh="8" &gt;
				&lt;diffieHellman allowWeakParameters="true" /&gt;
				&lt;rsa allowAnonymousKeyExchange="true" &gt;
					&lt;serverCertificate certificate="demo_wap1_server_certificate.wtls" privateKeyFile="demo_wap1_server_private_key.der" privateKeyPassword="</parameter><variable>PASSWORD</variable><parameter>" /&gt;
				&lt;/rsa&gt;
			&lt;/wtls&gt;
		&lt;/devices&gt;
		
		&lt;contentProviders&gt;
			&lt;https allowWeakEncryption="true"&gt;
				&lt;clientCertificate privateKeyFile="demo_inet_client_private_key.der" privateKeyPassword="</parameter><variable>PASSWORD</variable><parameter>"&gt;
					&lt;certificateChain&gt;
						&lt;certificate name="demo_inet_client_certificate.der"/&gt;
						&lt;certificate name="demo_inet_client_ca_certificate.der"/&gt;
					&lt;/certificateChain&gt;
				&lt;/clientCertificate&gt;
			&lt;/https&gt;
		&lt;/contentProviders&gt;
		    
    &lt;trustedAuthorities enableCrlChecking="false" &gt;
        &lt;certificate name="cacert.der"/&gt;
        &lt;certificate name="xttroot.der"/&gt;
    &lt;/trustedAuthorities&gt;
&lt;/security&gt;</parameter>
        </parameter>
    </function>
    
    
    <function name="executeRemoteXMSCommand" module="Remote">
        <parameter>load file cacert.der</parameter>
    </function>
    
    <function name="executeRemoteXMSCommand" module="Remote">
        <parameter>load file userCert1.der</parameter>
    </function>
             
</test>

